version: '3'
services:
  
  backend:
    image: abhay10371/flask-app:latest
    ports:
      - "5000:5000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: john
      MYSQL_PASSWORD: Jerry@4321
      MYSQL_DB: cricbuzz
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: test@123
      MYSQL_DATABASE: cricbuzz
      MYSQL_USER: john
      MYSQL_PASSWORD: Jerry@4321
    volumes:
      - ./message.sql:/docker-entrypoint-initdb.d/message.sql   # Mount sql script into container's /docker-entrypoint-initdb.d directory to get table automatically created
      - mysql-data:/var/lib/mysql  # Mount the volume for MySQL data storage. Make sure "mysql-data" volume shouldn't exist already. Check by "docker volume ls".

volumes:
  mysql-data:
# "entrypoint" typically refers to the initial command that runs when a Docker container starts. 
# The /docker-entrypoint path is a common location for an entrypoint script within a Docker image.
# The /docker-entrypoint-initdb.d/ directory is a common location in Docker images for initializing a database when a container is first started. 
# When a container is started from a Docker image with this directory structure, the files in /docker-entrypoint-initdb.d/ are executed as initialization scripts. 
# These scripts are typically used to set up the initial state of the database, create tables, insert initial data, and perform any other necessary setup.
